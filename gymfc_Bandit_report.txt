Run started:2023-04-23 05:50:54.851901

Test results:
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\examples\ppo_baselines_train.py:18:0
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_imports.html#b404-import-subprocess
17	import datetime
18	import subprocess
19	import numpy as np

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\examples\ppo_baselines_train.py:28:10
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b607_start_process_with_partial_path.html
27	def get_commit_hash():
28	    out = subprocess.run(["git", "describe", "--always"], stdout=subprocess.PIPE, encoding="utf-8")
29	    commit = out.stdout.strip()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\examples\ppo_baselines_train.py:28:10
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b603_subprocess_without_shell_equals_true.html
27	def get_commit_hash():
28	    out = subprocess.run(["git", "describe", "--always"], stdout=subprocess.PIPE, encoding="utf-8")
29	    commit = out.stdout.strip()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: gymfc\examples\ppo_baselines_train.py:157:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
156	
157	        assert local.ind_rewards[0] <= 0 # oscillation penalty
158	        assert local.ind_rewards[1] >= 0 # min output reward

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: gymfc\examples\ppo_baselines_train.py:158:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
157	        assert local.ind_rewards[0] <= 0 # oscillation penalty
158	        assert local.ind_rewards[1] >= 0 # min output reward
159	        assert local.ind_rewards[3] <= 0 # over saturation penalty

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: gymfc\examples\ppo_baselines_train.py:159:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
158	        assert local.ind_rewards[1] >= 0 # min output reward
159	        assert local.ind_rewards[3] <= 0 # over saturation penalty
160	        assert local.ind_rewards[4] <= 0 # do nothing penalty

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: gymfc\examples\ppo_baselines_train.py:160:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
159	        assert local.ind_rewards[3] <= 0 # over saturation penalty
160	        assert local.ind_rewards[4] <= 0 # do nothing penalty
161	
162	        self.rewards.append(local.ind_rewards)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:8:0
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_imports.html#b404-import-subprocess
7	import os.path
8	import subprocess
9	import signal

--------------------------------------------------
>> Issue: [B405:blacklist] Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   Location: gymfc\gymfc\envs\fc_env.py:11:0
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_imports.html#b405-import-xml-etree
10	import sys
11	import xml.etree.ElementTree as ET
12	import psutil

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:338:15
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b602_subprocess_popen_with_shell_equals_true.html
337	        command = ". {}; env".format(source_file)
338	        pipe = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
339	        output = pipe.communicate()[0]

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   Location: gymfc\gymfc\envs\fc_env.py:377:15
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
376	
377	        tree = ET.parse(self.aircraft_sdf_filepath)
378	        root = tree.getroot()

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:491:16
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b607_start_process_with_partial_path.html
490	        if self.verbose:
491	            p = subprocess.Popen(["gzserver", "--verbose", target_world], shell=False, env=container_env) 
492	        else:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:491:16
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b603_subprocess_without_shell_equals_true.html
490	        if self.verbose:
491	            p = subprocess.Popen(["gzserver", "--verbose", target_world], shell=False, env=container_env) 
492	        else:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:493:16
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b607_start_process_with_partial_path.html
492	        else:
493	            p = subprocess.Popen(["gzserver", target_world], shell=False, env=container_env) 
494	        self.env = container_env

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:493:16
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b603_subprocess_without_shell_equals_true.html
492	        else:
493	            p = subprocess.Popen(["gzserver", target_world], shell=False, env=container_env) 
494	        self.env = container_env

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   Location: gymfc\gymfc\envs\fc_env.py:504:15
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
503	
504	        tree = ET.parse(world_filepath)
505	        root = tree.getroot()

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:532:16
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b602_subprocess_popen_with_shell_equals_true.html
531	        for pid in self.process_ids:
532	            p = subprocess.run("kill {}".format(pid), shell=True)
533	            print("Killing Gazebo process with ID=", pid)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: gymfc\gymfc\envs\fc_env.py:559:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
558	        ob = self.loop.run_until_complete(self._step_sim(np.zeros(self.motor_count), world_control=Action_pb2.Action.RESET))
559	        assert np.isclose(self.sim_time, 0.0, 1e-6), "sim time after reset is incorrect, {} ".format(self.sim_time)
560	        return ob

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:567:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b607_start_process_with_partial_path.html
566	        """ Launch the Gazebo client """
567	        p = subprocess.Popen(["gzclient"], shell=False, env=self.env)
568	        self.process_ids.append(p.pid)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\gymfc\envs\fc_env.py:567:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b603_subprocess_without_shell_equals_true.html
566	        """ Launch the Gazebo client """
567	        p = subprocess.Popen(["gzclient"], shell=False, env=self.env)
568	        self.process_ids.append(p.pid)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\setup.py:4:0
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_imports.html#b404-import-subprocess
3	from distutils.errors import CompileError
4	import subprocess
5	import os

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   Location: gymfc\setup.py:22:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b602_subprocess_popen_with_shell_equals_true.html
21	        build_plugin_script = './build_plugin.sh'
22	        p = subprocess.Popen(build_plugin_script, cwd=plugin_dir, shell=True) 
23	        # Wait until the process completes

--------------------------------------------------
>> Issue: [B405:blacklist] Using xml.etree.ElementTree to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree with the equivalent defusedxml package, or make sure defusedxml.defuse_stdlib() is called.
   Severity: Low   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   Location: gymfc\tests\check_sim_stability.py:8:0
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_imports.html#b405-import-xml-etree
7	import pygazebo
8	import xml.etree.ElementTree as ET
9	from threading import Thread

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: gymfc\tests\check_sim_stability.py:320:19
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
319	        print ("Instability occurs at ", self.min_rate)
320	        np.savetxt("/tmp/unstable.txt", instable )
321	        return np.array(rates), max_r, colors, ds

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   Location: gymfc\tests\check_sim_stability.py:383:11
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
382	    world_filepath = os.path.abspath(os.path.join(gz_assets, "worlds", "attitude.world"))
383	    tree = ET.parse(world_filepath)
384	    root = tree.getroot()

--------------------------------------------------
>> Issue: [B314:blacklist] Using xml.etree.ElementTree.parse to parse untrusted XML data is known to be vulnerable to XML attacks. Replace xml.etree.ElementTree.parse with its defusedxml equivalent function or make sure defusedxml.defuse_stdlib() is called
   Severity: Medium   Confidence: High
   CWE: CWE-20 (https://cwe.mitre.org/data/definitions/20.html)
   Location: gymfc\tests\check_sim_stability.py:390:11
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_calls.html#b313-b320-xml-bad-elementtree
389	    """ Return the model name from the given SDF """
390	    tree = ET.parse(sdf)
391	    root = tree.getroot()

--------------------------------------------------

Code scanned:
	Total lines of code: 2842
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 18
		Medium: 5
		High: 3
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 1
		High: 25
Files skipped (0):
